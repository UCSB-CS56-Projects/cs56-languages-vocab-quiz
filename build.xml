<?xml version="1.0" encoding="utf-8"?>
<project default="compile">
  
  <!-- build.xml for Mantis ticket 0000341
       for: Choice Points 2, S11, CS56
       name: Dane Pitkin
	Modified by Dan Luo, W15, CS56 -->
  
  <property environment="env"/> <!-- load the environment variables --> 
  <property name="webRoot" value="${env.HOME}/public_html/cs56" />
  <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/cs56" />

  <property name="mainClass" value="ForeignVocabQuizGUI" />
  
  <property name="projectName" value="cs56-languages-vocab-quiz" /> 
  <property name="javadocDest" value="${webRoot}/${projectName}/javadoc" /> 
  <property name="javadocURL" value="${webBaseUrl}/${projectName}/javadoc" />
  
  <target name="compile" description="compile my code">
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
      <classpath>
	<pathelement location="build"/>
      </classpath>
    </javac>   
  </target>

	<path id="project.class.path">
		<pathelement location="build"/>
	</path>
  
  <target name="run" depends = "compile" description="run the ForeignVocabQuizGUI program">
    <java classname="${mainClass}" classpath="build" fork="true" />
  </target>

  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" quiet="true" />
    <delete dir="javadoc" quiet="true" />
  </target>
     
  <target name="javadoc" depends="compile" description="create javadoc">
    
    <delete dir="./javadoc" quiet="true" />
    
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >
      <fileset dir="src" includes="**/*.java" />
      <classpath refid="project.class.path"/>
    </javadoc>
    
    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}" />
    
    <!-- copy everything you just made to the javadoc destination, and then make it readable -->
    <copy todir="${javadocDest}" >
      <fileset dir="javadoc"/>
    </copy>
    
    <!-- Note: this only does the chmod command on the
	 javadoc subdirectory and its contents.  You MIGHT have to
	 MANUALLY do the chmod on the parent directories.  However,
	 you should only need to do that once. -->
    
    <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />
    <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />
    <echo>Javadoc deployed to ${javadocURL}</echo>
  </target>

 </project>
